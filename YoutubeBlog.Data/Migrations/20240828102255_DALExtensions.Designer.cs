// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YoutubeBlog.Data.Context;

#nullable disable

namespace YoutubeBlog.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240828102255_DALExtensions")]
    partial class DALExtensions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("YoutubeBlog.Entity.Entities.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViewCount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ImageId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("593c6e51-5ca4-484f-a6ec-5479c4817dc5"),
                            CategoryId = new Guid("4642999a-e595-42c7-aacf-1d7201b5c45a"),
                            Content = "ASP.NET CORE A custom launcher and content management app for Assetto Corsa. Still in development. From the authors of Cars Manager.\r\n\r\nBasic (Lite) version is free and contains all features listed below as key features and more. If you want to support development and get the access to WIP features and pre-release builds, please consider making a donation (any amount), and you’ll get an app key enabling new features.",
                            CreatedBy = "Admin test",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 22, 55, 605, DateTimeKind.Local).AddTicks(864),
                            ImageId = new Guid("3013b78e-c011-4c50-9498-6885ed538514"),
                            IsDeleted = false,
                            ModifiedTime = new DateTime(2024, 8, 28, 13, 22, 55, 605, DateTimeKind.Local).AddTicks(803),
                            Title = "ASP.NET CORE deneme makalesi 1",
                            ViewCount = "15"
                        },
                        new
                        {
                            Id = new Guid("7914f8ae-f8a8-4bd2-ab27-d782a9e566e1"),
                            CategoryId = new Guid("27fe0e34-5996-4727-8aaf-8ec6f8950563"),
                            Content = "visual studio A custom launcher and content management app for Assetto Corsa. Still in development. From the authors of Cars Manager.\r\n\r\nBasic (Lite) version is free and contains all features listed below as key features and more. If you want to support development and get the access to WIP features and pre-release builds, please consider making a donation (any amount), and you’ll get an app key enabling new features.",
                            CreatedBy = "Admin test",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 22, 55, 605, DateTimeKind.Local).AddTicks(880),
                            ImageId = new Guid("c55d0cb5-2188-4725-afd9-430e3dc7893d"),
                            IsDeleted = false,
                            ModifiedTime = new DateTime(2024, 8, 28, 13, 22, 55, 605, DateTimeKind.Local).AddTicks(868),
                            Title = "visual studio deneme makalesi 1",
                            ViewCount = "15"
                        });
                });

            modelBuilder.Entity("YoutubeBlog.Entity.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4642999a-e595-42c7-aacf-1d7201b5c45a"),
                            CreatedBy = "Admin test",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 22, 55, 605, DateTimeKind.Local).AddTicks(3355),
                            IsDeleted = false,
                            ModifiedTime = new DateTime(2024, 8, 28, 13, 22, 55, 605, DateTimeKind.Local).AddTicks(3337),
                            Name = "Asp.net core deneme makalesi 1"
                        },
                        new
                        {
                            Id = new Guid("27fe0e34-5996-4727-8aaf-8ec6f8950563"),
                            CreatedBy = "Admin test",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 22, 55, 605, DateTimeKind.Local).AddTicks(3361),
                            IsDeleted = false,
                            ModifiedTime = new DateTime(2024, 8, 28, 13, 22, 55, 605, DateTimeKind.Local).AddTicks(3359),
                            Name = "Visual studio deneme makalesi 1"
                        });
                });

            modelBuilder.Entity("YoutubeBlog.Entity.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3013b78e-c011-4c50-9498-6885ed538514"),
                            CreatedBy = "Admin test",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 22, 55, 605, DateTimeKind.Local).AddTicks(5148),
                            FileName = "image/testimage",
                            FileType = "jpg",
                            IsDeleted = false,
                            ModifiedTime = new DateTime(2024, 8, 28, 13, 22, 55, 605, DateTimeKind.Local).AddTicks(5131)
                        },
                        new
                        {
                            Id = new Guid("c55d0cb5-2188-4725-afd9-430e3dc7893d"),
                            CreatedBy = "Admin test",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 22, 55, 605, DateTimeKind.Local).AddTicks(5156),
                            FileName = "image/vstestimage",
                            FileType = "jpg",
                            IsDeleted = false,
                            ModifiedTime = new DateTime(2024, 8, 28, 13, 22, 55, 605, DateTimeKind.Local).AddTicks(5153)
                        });
                });

            modelBuilder.Entity("YoutubeBlog.Entity.Entities.Article", b =>
                {
                    b.HasOne("YoutubeBlog.Entity.Entities.Category", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YoutubeBlog.Entity.Entities.Image", "Image")
                        .WithMany("Articles")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("YoutubeBlog.Entity.Entities.Category", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("YoutubeBlog.Entity.Entities.Image", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
